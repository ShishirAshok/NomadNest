{"ast":null,"code":"const reducer = (state, action) => {\n  switch (action.type) {\n    // case 'OPEN_LOGIN':\n    //   return { ...state, openLogin: true };\n    // case 'CLOSE_LOGIN':\n    //   return { ...state, openLogin: false };\n\n    // case 'START_LOADING':\n    //   return { ...state, loading: true };\n    // case 'END_LOADING':\n    //   return { ...state, loading: false };\n\n    // case 'UPDATE_ALERT':\n    //   return { ...state, alert: action.payload };\n\n    // case 'UPDATE_PROFILE':\n    //   return { ...state, profile: action.payload };\n\n    case 'UPDATE_USER':\n      // localStorage.setItem('currentUser', JSON.stringify(action.payload));\n      return {\n        ...state,\n        currentUser: action.payload\n      };\n\n    // case 'UPDATE_IMAGES':\n    //   return { ...state, images: [...state.images, ...action.payload] };\n    // case 'DELETE_IMAGE':\n    //   return {\n    //     ...state,\n    //     images: state.images.filter((image) => image !== action.payload),\n    //   };\n    // case 'UPDATE_DETAILS':\n    //   return { ...state, details: { ...state.details, ...action.payload } };\n    // case 'UPDATE_LOCATION':\n    //   return { ...state, location: action.payload };\n    // case 'UPDATE_UPDATED_ROOM':\n    //   return { ...state, updatedRoom: action.payload };\n    // case 'UPDATE_DELETED_IMAGES':\n    //   return {\n    //     ...state,\n    //     deletedImages: [...state.deletedImages, ...action.payload],\n    //   };\n    // case 'UPDATE_ADDED_IMAGES':\n    //   return {\n    //     ...state,\n    //     addedImages: [...state.addedImages, ...action.payload],\n    //   };\n    // case 'RESET_ROOM':\n    //   return {\n    //     ...state,\n    //     images: [],\n    //     details: { title: '', description: '', price: 0 },\n    //     location: { lng: 0, lat: 0 },\n    //     updatedRoom: null,\n    //     deletedImages: [],\n    //     addedImages: [],\n    //   };\n\n    // case 'UPDATE_ROOMS':\n    //   return {\n    //     ...state,\n    //     rooms: action.payload,\n    //     addressFilter: null,\n    //     priceFilter: 50,\n    //     filteredRooms: action.payload,\n    //   };\n    // case 'FILTER_PRICE':\n    //   return {\n    //     ...state,\n    //     priceFilter: action.payload,\n    //     filteredRooms: applyFilter(\n    //       state.rooms,\n    //       state.addressFilter,\n    //       action.payload\n    //     ),\n    //   };\n    // case 'FILTER_ADDRESS':\n    //   return {\n    //     ...state,\n    //     addressFilter: action.payload,\n    //     filteredRooms: applyFilter(\n    //       state.rooms,\n    //       action.payload,\n    //       state.priceFilter\n    //     ),\n    //   };\n    // case 'CLEAR_ADDRESS':\n    //   return {\n    //     ...state,\n    //     addressFilter: null,\n    //     priceFilter: 50,\n    //     filteredRooms: state.rooms,\n    //   };\n\n    // case 'UPDATE_ROOM':\n    //   return { ...state, room: action.payload };\n\n    // case 'UPDATE_USERS':\n    //   return { ...state, users: action.payload };\n    // case 'DELETE_ROOM':\n    //   return {\n    //     ...state,\n    //     rooms: state.rooms.filter((room) => room._id !== action.payload),\n    //   };\n\n    // case 'UPDATE_SECTION':\n    //   return { ...state, section: action.payload };\n\n    default:\n      throw new Error('No matched action!');\n  }\n};\nexport default reducer;\n\n// const applyFilter = (rooms, address, price) => {\n//   let filteredRooms = rooms;\n//   if (address) {\n//     const { lng, lat } = address;\n//     filteredRooms = filteredRooms.filter((room) => {\n//       const lngDifference = Math.abs(lng - room.lng);\n//       const latDifference = Math.abs(lat - room.lat);\n//       return lngDifference <= 1 && latDifference <= 1;\n//     });\n//   }\n\n//   if (price < 50) {\n//     filteredRooms = filteredRooms.filter((room) => room.price <= price);\n//   }\n\n//   return filteredRooms;\n// };","map":{"version":3,"names":["reducer","state","action","type","currentUser","payload","Error"],"sources":["C:/Users/shish/HostelProject/client/src/context/reducer.js"],"sourcesContent":["const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    // case 'OPEN_LOGIN':\r\n    //   return { ...state, openLogin: true };\r\n    // case 'CLOSE_LOGIN':\r\n    //   return { ...state, openLogin: false };\r\n\r\n    // case 'START_LOADING':\r\n    //   return { ...state, loading: true };\r\n    // case 'END_LOADING':\r\n    //   return { ...state, loading: false };\r\n\r\n    // case 'UPDATE_ALERT':\r\n    //   return { ...state, alert: action.payload };\r\n\r\n    // case 'UPDATE_PROFILE':\r\n    //   return { ...state, profile: action.payload };\r\n\r\n    case 'UPDATE_USER':\r\n      // localStorage.setItem('currentUser', JSON.stringify(action.payload));\r\n      return { ...state, currentUser: action.payload };\r\n\r\n    // case 'UPDATE_IMAGES':\r\n    //   return { ...state, images: [...state.images, ...action.payload] };\r\n    // case 'DELETE_IMAGE':\r\n    //   return {\r\n    //     ...state,\r\n    //     images: state.images.filter((image) => image !== action.payload),\r\n    //   };\r\n    // case 'UPDATE_DETAILS':\r\n    //   return { ...state, details: { ...state.details, ...action.payload } };\r\n    // case 'UPDATE_LOCATION':\r\n    //   return { ...state, location: action.payload };\r\n    // case 'UPDATE_UPDATED_ROOM':\r\n    //   return { ...state, updatedRoom: action.payload };\r\n    // case 'UPDATE_DELETED_IMAGES':\r\n    //   return {\r\n    //     ...state,\r\n    //     deletedImages: [...state.deletedImages, ...action.payload],\r\n    //   };\r\n    // case 'UPDATE_ADDED_IMAGES':\r\n    //   return {\r\n    //     ...state,\r\n    //     addedImages: [...state.addedImages, ...action.payload],\r\n    //   };\r\n    // case 'RESET_ROOM':\r\n    //   return {\r\n    //     ...state,\r\n    //     images: [],\r\n    //     details: { title: '', description: '', price: 0 },\r\n    //     location: { lng: 0, lat: 0 },\r\n    //     updatedRoom: null,\r\n    //     deletedImages: [],\r\n    //     addedImages: [],\r\n    //   };\r\n\r\n    // case 'UPDATE_ROOMS':\r\n    //   return {\r\n    //     ...state,\r\n    //     rooms: action.payload,\r\n    //     addressFilter: null,\r\n    //     priceFilter: 50,\r\n    //     filteredRooms: action.payload,\r\n    //   };\r\n    // case 'FILTER_PRICE':\r\n    //   return {\r\n    //     ...state,\r\n    //     priceFilter: action.payload,\r\n    //     filteredRooms: applyFilter(\r\n    //       state.rooms,\r\n    //       state.addressFilter,\r\n    //       action.payload\r\n    //     ),\r\n    //   };\r\n    // case 'FILTER_ADDRESS':\r\n    //   return {\r\n    //     ...state,\r\n    //     addressFilter: action.payload,\r\n    //     filteredRooms: applyFilter(\r\n    //       state.rooms,\r\n    //       action.payload,\r\n    //       state.priceFilter\r\n    //     ),\r\n    //   };\r\n    // case 'CLEAR_ADDRESS':\r\n    //   return {\r\n    //     ...state,\r\n    //     addressFilter: null,\r\n    //     priceFilter: 50,\r\n    //     filteredRooms: state.rooms,\r\n    //   };\r\n\r\n    // case 'UPDATE_ROOM':\r\n    //   return { ...state, room: action.payload };\r\n\r\n    // case 'UPDATE_USERS':\r\n    //   return { ...state, users: action.payload };\r\n    // case 'DELETE_ROOM':\r\n    //   return {\r\n    //     ...state,\r\n    //     rooms: state.rooms.filter((room) => room._id !== action.payload),\r\n    //   };\r\n\r\n    // case 'UPDATE_SECTION':\r\n    //   return { ...state, section: action.payload };\r\n\r\n    default:\r\n      throw new Error('No matched action!');\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n\r\n// const applyFilter = (rooms, address, price) => {\r\n//   let filteredRooms = rooms;\r\n//   if (address) {\r\n//     const { lng, lat } = address;\r\n//     filteredRooms = filteredRooms.filter((room) => {\r\n//       const lngDifference = Math.abs(lng - room.lng);\r\n//       const latDifference = Math.abs(lat - room.lat);\r\n//       return lngDifference <= 1 && latDifference <= 1;\r\n//     });\r\n//   }\r\n\r\n//   if (price < 50) {\r\n//     filteredRooms = filteredRooms.filter((room) => room.price <= price);\r\n//   }\r\n\r\n//   return filteredRooms;\r\n// };\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjC,QAAQA,MAAM,CAACC,IAAI;IACjB;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;IACA;;IAEA,KAAK,aAAa;MAChB;MACA,OAAO;QAAE,GAAGF,KAAK;QAAEG,WAAW,EAAEF,MAAM,CAACG;MAAQ,CAAC;;IAElD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;MACE,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;EACzC;AACF,CAAC;AAED,eAAeN,OAAO;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}