{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shish\\\\HostelProject\\\\client\\\\src\\\\pages\\\\dashboard\\\\users\\\\Users.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useMemo, useState } from 'react';\nimport { Avatar, Box, Typography } from '@mui/material';\nimport { DataGrid, gridClasses } from '@mui/x-data-grid';\nimport { useValue } from '../../../context/ContextProvider';\nimport { getUsers } from '../../../actions/user';\nimport moment from 'moment';\nimport { grey } from '@mui/material/colors';\nimport UsersActions from './UsersActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = _ref => {\n  _s();\n  let {\n    setSelectedLink,\n    link\n  } = _ref;\n  const {\n    state: {\n      users,\n      currentUser\n    },\n    dispatch\n  } = useValue();\n  const [pageSize, setPageSize] = useState(5);\n  const [rowId, setRowId] = useState(null);\n  useEffect(() => {\n    setSelectedLink(link);\n    if (users.length === 0) getUsers(dispatch, currentUser);\n  }, []);\n  const columns = useMemo(() => [{\n    field: 'photoURL',\n    headerName: 'Avatar',\n    width: 60,\n    renderCell: params => /*#__PURE__*/_jsxDEV(Avatar, {\n      src: params.row.photoURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 33\n    }, this),\n    sortable: false,\n    filterable: false\n  }, {\n    field: 'name',\n    headerName: 'Name',\n    width: 170\n  }, {\n    field: 'email',\n    headerName: 'Email',\n    width: 200\n  }, {\n    field: 'role',\n    headerName: 'Role',\n    width: 100,\n    type: 'singleSelect',\n    valueOptions: ['basic', 'editor', 'admin'],\n    editable: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.role) === 'admin'\n  }, {\n    field: 'active',\n    headerName: 'Active',\n    width: 100,\n    type: 'boolean',\n    editable: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.role) === 'admin'\n  }, {\n    field: 'createdAt',\n    headerName: 'Created At',\n    width: 200,\n    renderCell: params => moment(params.row.createdAt).format('YYYY-MM-DD HH:MM:SS')\n  }, {\n    field: '_id',\n    headerName: 'Id',\n    width: 220\n  }, {\n    field: 'actions',\n    headerName: 'Actions',\n    type: 'actions',\n    renderCell: params => /*#__PURE__*/_jsxDEV(UsersActions, {\n      params,\n      rowId,\n      setRowId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this)\n  }], [rowId]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: 400,\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      component: \"h3\",\n      sx: {\n        textAlign: 'center',\n        mt: 3,\n        mb: 3\n      },\n      children: \"Manage Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n      columns: columns,\n      rows: users,\n      getRowId: row => row._id,\n      rowsPerPageOptions: [5, 10, 20],\n      pageSize: pageSize,\n      onPageSizeChange: newPageSize => setPageSize(newPageSize),\n      getRowSpacing: params => ({\n        top: params.isFirstVisible ? 0 : 5,\n        bottom: params.isLastVisible ? 0 : 5\n      }),\n      sx: {\n        [`& .${gridClasses.row}`]: {\n          bgcolor: theme => theme.palette.mode === 'light' ? grey[200] : grey[900]\n        }\n      },\n      onCellEditCommit: params => setRowId(params.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"K7W2/9Z/iUy4Yps7kRVDh05i8vE=\", false, function () {\n  return [useValue];\n});\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["useEffect","useMemo","useState","Avatar","Box","Typography","DataGrid","gridClasses","useValue","getUsers","moment","grey","UsersActions","jsxDEV","_jsxDEV","Users","_ref","_s","setSelectedLink","link","state","users","currentUser","dispatch","pageSize","setPageSize","rowId","setRowId","length","columns","field","headerName","width","renderCell","params","src","row","photoURL","fileName","_jsxFileName","lineNumber","columnNumber","sortable","filterable","type","valueOptions","editable","role","createdAt","format","sx","height","children","variant","component","textAlign","mt","mb","rows","getRowId","_id","rowsPerPageOptions","onPageSizeChange","newPageSize","getRowSpacing","top","isFirstVisible","bottom","isLastVisible","bgcolor","theme","palette","mode","onCellEditCommit","id","_c","$RefreshReg$"],"sources":["C:/Users/shish/HostelProject/client/src/pages/dashboard/users/Users.js"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react';\r\nimport { Avatar, Box, Typography } from '@mui/material';\r\nimport { DataGrid, gridClasses } from '@mui/x-data-grid';\r\nimport { useValue } from '../../../context/ContextProvider';\r\nimport { getUsers } from '../../../actions/user';\r\nimport moment from 'moment';\r\nimport { grey } from '@mui/material/colors';\r\nimport UsersActions from './UsersActions';\r\n\r\nconst Users = ({ setSelectedLink, link }) => {\r\n  const {\r\n    state: { users, currentUser },\r\n    dispatch,\r\n  } = useValue();\r\n\r\n  const [pageSize, setPageSize] = useState(5);\r\n  const [rowId, setRowId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setSelectedLink(link);\r\n    if (users.length === 0) getUsers(dispatch, currentUser);\r\n  }, []);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        field: 'photoURL',\r\n        headerName: 'Avatar',\r\n        width: 60,\r\n        renderCell: (params) => <Avatar src={params.row.photoURL} />,\r\n        sortable: false,\r\n        filterable: false,\r\n      },\r\n      { field: 'name', headerName: 'Name', width: 170 },\r\n      { field: 'email', headerName: 'Email', width: 200 },\r\n      {\r\n        field: 'role',\r\n        headerName: 'Role',\r\n        width: 100,\r\n        type: 'singleSelect',\r\n        valueOptions: ['basic', 'editor', 'admin'],\r\n        editable: currentUser?.role === 'admin',\r\n      },\r\n      {\r\n        field: 'active',\r\n        headerName: 'Active',\r\n        width: 100,\r\n        type: 'boolean',\r\n        editable: currentUser?.role === 'admin',\r\n      },\r\n      {\r\n        field: 'createdAt',\r\n        headerName: 'Created At',\r\n        width: 200,\r\n        renderCell: (params) =>\r\n          moment(params.row.createdAt).format('YYYY-MM-DD HH:MM:SS'),\r\n      },\r\n      { field: '_id', headerName: 'Id', width: 220 },\r\n      {\r\n        field: 'actions',\r\n        headerName: 'Actions',\r\n        type: 'actions',\r\n        renderCell: (params) => (\r\n          <UsersActions {...{ params, rowId, setRowId }} />\r\n        ),\r\n      },\r\n    ],\r\n    [rowId]\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: 400,\r\n        width: '100%',\r\n      }}\r\n    >\r\n      <Typography\r\n        variant=\"h3\"\r\n        component=\"h3\"\r\n        sx={{ textAlign: 'center', mt: 3, mb: 3 }}\r\n      >\r\n        Manage Users\r\n      </Typography>\r\n      <DataGrid\r\n        columns={columns}\r\n        rows={users}\r\n        getRowId={(row) => row._id}\r\n        rowsPerPageOptions={[5, 10, 20]}\r\n        pageSize={pageSize}\r\n        onPageSizeChange={(newPageSize) => setPageSize(newPageSize)}\r\n        getRowSpacing={(params) => ({\r\n          top: params.isFirstVisible ? 0 : 5,\r\n          bottom: params.isLastVisible ? 0 : 5,\r\n        })}\r\n        sx={{\r\n          [`& .${gridClasses.row}`]: {\r\n            bgcolor: (theme) =>\r\n              theme.palette.mode === 'light' ? grey[200] : grey[900],\r\n          },\r\n        }}\r\n        onCellEditCommit={(params) => setRowId(params.id)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}