{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shish\\\\HostelProject\\\\client\\\\src\\\\components\\\\addRoom\\\\addLocation\\\\AddLocation.js\",\n  _s = $RefreshSig$();\nimport { Box } from '@mui/material';\nimport ReactMapGL, { GeolocateControl, Marker, NavigationControl } from 'react-map-gl';\nimport { useValue } from '../../../context/ContextProvider';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { useEffect, useRef } from 'react';\nimport Geocoder from './Geocoder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddLocation = () => {\n  _s();\n  const {\n    state: {\n      location: {\n        lng,\n        lat\n      },\n      currentUser\n    },\n    dispatch\n  } = useValue();\n  const mapRef = useRef();\n  useEffect(() => {\n    var _JSON$parse;\n    const storedLocation = (_JSON$parse = JSON.parse(localStorage.getItem(currentUser.id))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.location;\n    if (!lng && !lat && !(storedLocation !== null && storedLocation !== void 0 && storedLocation.lng) && !(storedLocation !== null && storedLocation !== void 0 && storedLocation.lat)) {\n      fetch('https://ipapi.co/json').then(response => {\n        return response.json();\n      }).then(data => {\n        dispatch({\n          type: 'UPDATE_LOCATION',\n          payload: {\n            lng: data.longitude,\n            lat: data.latitude\n          }\n        });\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if ((lng || lat) && mapRef.current) {\n      mapRef.current.flyTo({\n        center: [lng, lat]\n      });\n    }\n  }, [lng, lat]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: 400,\n      position: 'relative'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactMapGL, {\n      ref: mapRef,\n      mapboxAccessToken: process.env.REACT_APP_MAP_TOKEN,\n      initialViewState: {\n        longitude: lng,\n        latitude: lat,\n        zoom: 8\n      },\n      mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        latitude: lat,\n        longitude: lng,\n        draggable: true,\n        onDragEnd: e => dispatch({\n          type: 'UPDATE_LOCATION',\n          payload: {\n            lng: e.lngLat.lng,\n            lat: e.lngLat.lat\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavigationControl, {\n        position: \"bottom-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GeolocateControl, {\n        position: \"top-left\",\n        trackUserLocation: true,\n        onGeolocate: e => dispatch({\n          type: 'UPDATE_LOCATION',\n          payload: {\n            lng: e.coords.longitude,\n            lat: e.coords.latitude\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Geocoder, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AddLocation, \"XF9BTypMDDpvuXg0N4FjNYAh0Kw=\", false, function () {\n  return [useValue];\n});\n_c = AddLocation;\nexport default AddLocation;\nvar _c;\n$RefreshReg$(_c, \"AddLocation\");","map":{"version":3,"names":["Box","ReactMapGL","GeolocateControl","Marker","NavigationControl","useValue","useEffect","useRef","Geocoder","jsxDEV","_jsxDEV","AddLocation","_s","state","location","lng","lat","currentUser","dispatch","mapRef","_JSON$parse","storedLocation","JSON","parse","localStorage","getItem","id","fetch","then","response","json","data","type","payload","longitude","latitude","current","flyTo","center","sx","height","position","children","ref","mapboxAccessToken","process","env","REACT_APP_MAP_TOKEN","initialViewState","zoom","mapStyle","draggable","onDragEnd","e","lngLat","fileName","_jsxFileName","lineNumber","columnNumber","trackUserLocation","onGeolocate","coords","_c","$RefreshReg$"],"sources":["C:/Users/shish/HostelProject/client/src/components/addRoom/addLocation/AddLocation.js"],"sourcesContent":["import { Box } from '@mui/material';\r\nimport ReactMapGL, {\r\n  GeolocateControl,\r\n  Marker,\r\n  NavigationControl,\r\n} from 'react-map-gl';\r\nimport { useValue } from '../../../context/ContextProvider';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport { useEffect, useRef } from 'react';\r\nimport Geocoder from './Geocoder';\r\n\r\nconst AddLocation = () => {\r\n  const {\r\n    state: {\r\n      location: { lng, lat },\r\n      currentUser,\r\n    },\r\n    dispatch,\r\n  } = useValue();\r\n  const mapRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const storedLocation = JSON.parse(\r\n      localStorage.getItem(currentUser.id)\r\n    )?.location;\r\n    if (!lng && !lat && !storedLocation?.lng && !storedLocation?.lat) {\r\n      fetch('https://ipapi.co/json')\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          dispatch({\r\n            type: 'UPDATE_LOCATION',\r\n            payload: { lng: data.longitude, lat: data.latitude },\r\n          });\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if ((lng || lat) && mapRef.current) {\r\n      mapRef.current.flyTo({\r\n        center: [lng, lat],\r\n      });\r\n    }\r\n  }, [lng, lat]);\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: 400,\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      <ReactMapGL\r\n        ref={mapRef}\r\n        mapboxAccessToken={process.env.REACT_APP_MAP_TOKEN}\r\n        initialViewState={{\r\n          longitude: lng,\r\n          latitude: lat,\r\n          zoom: 8,\r\n        }}\r\n        mapStyle=\"mapbox://styles/mapbox/streets-v11\"\r\n      >\r\n        <Marker\r\n          latitude={lat}\r\n          longitude={lng}\r\n          draggable\r\n          onDragEnd={(e) =>\r\n            dispatch({\r\n              type: 'UPDATE_LOCATION',\r\n              payload: { lng: e.lngLat.lng, lat: e.lngLat.lat },\r\n            })\r\n          }\r\n        />\r\n        <NavigationControl position=\"bottom-right\" />\r\n        <GeolocateControl\r\n          position=\"top-left\"\r\n          trackUserLocation\r\n          onGeolocate={(e) =>\r\n            dispatch({\r\n              type: 'UPDATE_LOCATION',\r\n              payload: { lng: e.coords.longitude, lat: e.coords.latitude },\r\n            })\r\n          }\r\n        />\r\n        <Geocoder />\r\n      </ReactMapGL>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddLocation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}