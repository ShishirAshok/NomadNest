{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shish\\\\HostelProject\\\\client\\\\src\\\\components\\\\user\\\\UserIcons.js\",\n  _s = $RefreshSig$();\nimport { Mail, Notifications } from '@mui/icons-material';\nimport { Avatar, Badge, Box, IconButton, Tooltip } from '@mui/material';\nimport React, { useState } from 'react';\nimport { useValue } from '../../context/ContextProvider';\n// import useCheckToken from '../../hooks/useCheckToken';\n// import UserMenu from './UserMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserIcons = () => {\n  _s();\n  // useCheckToken();\n  const {\n    state: {\n      currentUser\n    }\n  } = useValue();\n\n  //const [anchorUserMenu, setAnchorUserMenu] = useState(null);\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      size: \"large\",\n      color: \"inherit\",\n      children: /*#__PURE__*/_jsxDEV(Badge, {\n        color: \"error\",\n        badgeContent: 5,\n        children: /*#__PURE__*/_jsxDEV(Mail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      size: \"large\",\n      color: \"inherit\",\n      children: /*#__PURE__*/_jsxDEV(Badge, {\n        color: \"error\",\n        badgeContent: 20,\n        children: /*#__PURE__*/_jsxDEV(Notifications, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(UserIcons, \"pyQ0TgwcDjE9rPFTT3OfRDEVmEY=\", false, function () {\n  return [useValue];\n});\n_c = UserIcons;\nexport default UserIcons;\nvar _c;\n$RefreshReg$(_c, \"UserIcons\");","map":{"version":3,"names":["Mail","Notifications","Avatar","Badge","Box","IconButton","Tooltip","React","useState","useValue","jsxDEV","_jsxDEV","UserIcons","_s","state","currentUser","children","size","color","badgeContent","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shish/HostelProject/client/src/components/user/UserIcons.js"],"sourcesContent":["import { Mail, Notifications } from '@mui/icons-material';\r\nimport { Avatar, Badge, Box, IconButton, Tooltip } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { useValue } from '../../context/ContextProvider';\r\n// import useCheckToken from '../../hooks/useCheckToken';\r\n// import UserMenu from './UserMenu';\r\n\r\nconst UserIcons = () => {\r\n  // useCheckToken();\r\n  const {\r\n    state: { currentUser },\r\n  } = useValue();\r\n\r\n  //const [anchorUserMenu, setAnchorUserMenu] = useState(null);\r\n\r\n  return (\r\n    <Box>\r\n      <IconButton size=\"large\" color=\"inherit\">\r\n        <Badge color=\"error\" badgeContent={5}>\r\n          <Mail />\r\n        </Badge>\r\n      </IconButton>\r\n      <IconButton size=\"large\" color=\"inherit\">\r\n        <Badge color=\"error\" badgeContent={20}>\r\n          <Notifications />\r\n        </Badge>\r\n      </IconButton>\r\n      {/* <Tooltip title=\"Open User Settings\">\r\n        <IconButton onClick={(e) => setAnchorUserMenu(e.currentTarget)}>\r\n          <Avatar src={currentUser?.photoURL} alt={currentUser?.name}>\r\n            {currentUser?.name?.charAt(0).toUpperCase()}\r\n          </Avatar>\r\n        </IconButton>\r\n      </Tooltip> */}\r\n      {/* <UserMenu {...{ anchorUserMenu, setAnchorUserMenu }} /> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserIcons;\r\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,aAAa,QAAQ,qBAAqB;AACzD,SAASC,MAAM,EAAEC,KAAK,EAAEC,GAAG,EAAEC,UAAU,EAAEC,OAAO,QAAQ,eAAe;AACvE,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,+BAA+B;AACxD;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB;EACA,MAAM;IACJC,KAAK,EAAE;MAAEC;IAAY;EACvB,CAAC,GAAGN,QAAQ,CAAC,CAAC;;EAEd;;EAEA,oBACEE,OAAA,CAACP,GAAG;IAAAY,QAAA,gBACFL,OAAA,CAACN,UAAU;MAACY,IAAI,EAAC,OAAO;MAACC,KAAK,EAAC,SAAS;MAAAF,QAAA,eACtCL,OAAA,CAACR,KAAK;QAACe,KAAK,EAAC,OAAO;QAACC,YAAY,EAAE,CAAE;QAAAH,QAAA,eACnCL,OAAA,CAACX,IAAI;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACbZ,OAAA,CAACN,UAAU;MAACY,IAAI,EAAC,OAAO;MAACC,KAAK,EAAC,SAAS;MAAAF,QAAA,eACtCL,OAAA,CAACR,KAAK;QAACe,KAAK,EAAC,OAAO;QAACC,YAAY,EAAE,EAAG;QAAAH,QAAA,eACpCL,OAAA,CAACV,aAAa;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OASV,CAAC;AAEV,CAAC;AAACV,EAAA,CA9BID,SAAS;EAAA,QAITH,QAAQ;AAAA;AAAAe,EAAA,GAJRZ,SAAS;AAgCf,eAAeA,SAAS;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}